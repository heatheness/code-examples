/*
 В стандартном потоке ввода находится последовательность символов неизвестной длины, маркер конца последовательности 
 - EOF. Подпоследовательность символов, разделеная пробельными символами считается словом. Любая подпоследвательность 
 символов (в том числе пробельные символы), заключенная в кавычки - "" считается словом.  Необходимо отсортировать 
 слова и вывести их на экран. Если имеются непарные кавычки, то должно выводиться сообщение об ошибке.

*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


char *word = NULL;
char **string = NULL;
int current_char, word_len, string_len, isword, isquote;

int cmp (const void *element_1, const void *element_2){
    return strcmp (*(char**)element_1,*(char**)element_2);}

int main(void) {
    string = (char**)malloc(sizeof(char*));
    word_len = 0;
    isword = 0;
    string_len = 0;
    isquote = 0;
    printf("input string ");
    
    while ((current_char = getchar()) != EOF) {
        if (isquote == 1) {
            if (current_char == '\"') {
                isquote = 0;
            }
            else {
                word[word_len++] = current_char;
                word = (char*)realloc(word, sizeof(int)*(word_len+1));
            }
        }
        else {
            if (isspace(current_char)){
                if (isword == 1) {
                    word[word_len] = '\0';
                    isword = 0;
                    word_len = 0;
                    string[string_len++] = word;
                    string = (char**)realloc(string,sizeof(char*)*(string_len+1));
                    word = NULL;
                }
                else {
                    continue;
                }
            }
            else {
                if (isword == 0) {
                    isword = 1;
                    word = (char*)malloc(sizeof(char));
                    if (current_char == '\"') {
                        isquote = 1;
                        continue;
                    }
                }
                word[word_len++] = current_char;
                word = (char*)realloc(word, sizeof(int)*(word_len+1));
            }
        }
    }
    
    if (isquote == 1) {
        printf ("ERROR - open quote");}
    else {
        qsort (string,string_len,sizeof(char*),cmp);
        for (int i=0; i<string_len; i++) {
            printf("%s\n", string[i]);
        }
    }
    return 0;
}
